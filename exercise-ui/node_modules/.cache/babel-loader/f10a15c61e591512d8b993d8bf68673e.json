{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\Desktop\\\\OSU\\\\CS\\\\assignment7\\\\exercise-ui\\\\src\\\\pages\\\\EditExercise.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditExercise = _ref => {\n  _s();\n\n  let {\n    exerciseToEdit\n  } = _ref;\n  const [name, setName] = useState(exercise.name);\n  const [reps, setReps] = useState(exercise.reps);\n  const [weight, setWeight] = useState(exercise.weight);\n  const [unit, setUnit] = useState(exercise.unit);\n  const [date, setDate] = useState(exercise.date);\n  const history = useHistory();\n\n  const editExer = async () => {\n    const response = await fetch(`/exercises/${exercise._id}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        name: name,\n        reps: reps,\n        weight: weight,\n        unit: unit,\n        date: date\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.status === 200) {\n      alert(\"Successfully edited exercise!\");\n    } else {\n      const errMessage = await response.json();\n      alert(`Failed to update exercise. Status ${response.status}. ${errMessage.Error}`);\n    }\n\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit an exercise in the collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Paragraph about this page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Which exercise are you adding?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Exercise Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: \"required\",\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            id: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"reps\",\n            children: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: \"required\",\n            type: \"number\",\n            min: \"0\",\n            value: reps,\n            onChange: e => setReps(e.target.value),\n            id: \"reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"weight\",\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: \"required\",\n            type: \"number\",\n            min: \"0\",\n            value: weight,\n            onChange: e => setWeight(e.target.value),\n            id: \"weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"unit\",\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: \"required\",\n            type: \"text\",\n            value: unit,\n            onChange: e => setUnit(e.target.value),\n            id: \"unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: \"required\",\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            id: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"submit\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: editExer,\n              id: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditExercise, \"KWrVmcU3n56JRn9+Ci+1zc6XoEI=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditExercise;\nexport default EditExercise;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditExercise\");","map":{"version":3,"names":["React","useHistory","useState","EditExercise","exerciseToEdit","name","setName","exercise","reps","setReps","weight","setWeight","unit","setUnit","date","setDate","history","editExer","response","fetch","_id","method","body","JSON","stringify","headers","status","alert","errMessage","json","Error","push","e","preventDefault","target","value"],"sources":["C:/Users/a/Desktop/OSU/CS/assignment7/exercise-ui/src/pages/EditExercise.js"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\n\r\nexport const EditExercise = ({ exerciseToEdit }) => {\r\n \r\n    const [name, setName]       = useState(exercise.name);\r\n    const [reps, setReps]         = useState(exercise.reps);\r\n    const [weight, setWeight]   = useState(exercise.weight);\r\n    const [unit, setUnit]       = useState(exercise.unit);\r\n    const [date, setDate]       = useState(exercise.date);\r\n    \r\n    const history = useHistory();\r\n\r\n    const editExer = async () => {\r\n        const response = await fetch(`/exercises/${exercise._id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \r\n                name: name, \r\n                reps: reps, \r\n                weight: weight,\r\n                unit: unit,\r\n                date: date\r\n            }),\r\n            headers: {'Content-Type': 'application/json',},\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            alert(\"Successfully edited exercise!\");\r\n        } else {\r\n            const errMessage = await response.json();\r\n            alert(`Failed to update exercise. Status ${response.status}. ${errMessage.Error}`);\r\n        }\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <article>\r\n            <h2>Edit an exercise in the collection</h2>\r\n            <p>Paragraph about this page.</p>\r\n            <form onSubmit={(e) => { e.preventDefault();}}>\r\n                <fieldset>\r\n                    <legend>Which exercise are you adding?</legend>\r\n                    <label for=\"name\">Exercise Name</label>\r\n                    <input required=\"required\"\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)} \r\n                        id=\"name\" />\r\n                    \r\n                    <label for=\"reps\">Reps</label>\r\n                    <input required=\"required\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        value={reps}\r\n                        onChange={e => setReps(e.target.value)} \r\n                        id=\"reps\" />\r\n\r\n                    <label for=\"weight\">Weight</label>\r\n                    <input required=\"required\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        value={weight}\r\n                        onChange={e => setWeight(e.target.value)} \r\n                        id=\"weight\" />\r\n                        \r\n                    <label for=\"unit\">Unit</label>\r\n                    <input required=\"required\"\r\n                        type=\"text\"\r\n                        value={unit}\r\n                        onChange={e => setUnit(e.target.value)} \r\n                        id=\"unit\" /> \r\n\r\n                    <label for=\"date\">Date</label>\r\n                    <input required=\"required\"\r\n                        type=\"date\"\r\n                        value={date}\r\n                        onChange={e => setDate(e.target.value)} \r\n                        id=\"date\" /> \r\n\r\n                    <label for=\"submit\">\r\n                    <button\r\n                        onClick={editExer}\r\n                        id=\"submit\"\r\n                    >Save</button> </label>\r\n                </fieldset>\r\n                </form>\r\n            </article>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditExercise;"],"mappings":"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"},"metadata":{},"sourceType":"module"}